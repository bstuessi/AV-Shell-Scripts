#Created by Brock Stuessi in February 2023
#This script copies files and confirms a copy with MD5 checksum hash

#Help output

Help() {
    cat <<EOF
Purpose: This script copies files and confirms a copy with MD5 checksum hash. It stores the informaation generated by these processes in a log txt file.

Syntax: securecp -i <origin-file-full-path> -o <output-file-full-path> -l <log-file-path>
EOF
exit 1
}

unset LOG ORIGIN DESTINATION SHASUM


#Options
while getopts ":i:o:l:h" option; do
    case $option in 
        i) ORIGIN=$OPTARG ;;
        o) DESTINATION=$OPTARG ;;
        l) LOG=$OPTARG ;;
        h) Help ;;
    esac
done

#Script

if [[ -n $LOG ]]
    then 
        continue
    else
        #set log file to expected value
        touch "$(dirname "${DESTINATION}")/transfer_log.txt"
        LOG="$(dirname "${DESTINATION}")/transfer_log.txt"
fi;

if [[ -n "$ORIGIN" ]]
then
    if [[ "$DESTINATION" =~ "." ]]
        then
            continue
        else
            mkdir "$DESTINATION"
    fi;

    rsync -av --log-file="$LOG" "$ORIGIN" "$DESTINATION"; 

    echo "File(s) copied successfully"
    echo "Hashing copied file(s)";    
    if [[ -d "$DESTINATION" ]]
        then
        SHA_HASH=$(for f in "${DESTINATION//\\/}"/*; do shasum -a 256 "$f"; done;);
        else
        SHA_HASH=$(shasum -a 256 "$DESTINATION");
    fi;
    echo "Hashing complete\nWriting hash and file paths to log file";

    printf "\nOrigin file/dir path: $ORIGIN\n\n" >> "$LOG";
    printf "Destination file/dir path: $DESTINATION \nSHA256 hash(es): \n$SHA_HASH \n\n" >> "$LOG";
    echo '\007';
#     if [[ -d $ORIGIN ]]
#     then 
#         echo "Running origin hash...";
#         ORIGIN_HASH=$(find -s "$ORIGIN" -type f -exec md5 -q {} \; | md5);
#         echo "Running destination hash...";
#         NEW_HASH=$(find -s "$DESTINATION" -type f -exec md5 -q {} \; | md5);
#     else
#         echo "Running origin hash...";
#         ORIGIN_HASH=$(md5 -q "$ORIGIN");
#         echo "Running destination hash...";
#         NEW_HASH=$(md5 -q "$DESTINATION");
#     fi;

#     if [ $ORIGIN_HASH = $NEW_HASH ]
#     then
#         printf "Origin file/dir path: $ORIGIN \nMD5 hash: $ORIGIN_HASH \n\n" >> "$LOG";
#         printf "Destination file/dir path: $DESTINATION \nMD5 hash: $NEW_HASH \n\n" >> "$LOG";
#         echo "MD5 checksum test passed - files copied successfully!\n\n\n"|tee -a "$LOG";
#     else
#         printf "Origin file/dir path: "$ORIGIN" \nMD5 hash: $ORIGIN_HASH \n\n" >> "$LOG";
#         printf "Destination file/dir path: "$DESTINATION" \nMD5 hash: $NEW_HASH \n\n" >> "$LOG";
#         echo "MD5 checksum test failed - try alternative methods of transfer."|tee -a "$LOG";
#     fi;
else 
    echo "Error: set origin file path using syntax: securecp -i <origin-file-full-path> -o <output-file-full-path> -l <log-file-path>"

fi;